#!/bin/bash

# Step 1: Installation of supported packages and library.
sudo apt-get install gcc g++ python
sudo apt-get install  python-dev
sudo apt-get install qt4-dev-tools
sudo apt-get install mercurial
sudo apt-get install
sudo apt-get install cmake libc6-dev libc6-dev-i386 g++-multilib
sudo apt-get install gdb valgrind
sudo apt-get install gsl-bin libgsl0-dev libgsl0ldbl
sudo apt-get install flex bison libfl-dev
sudo apt-get install tcpdump
sudo apt-get install sqlite sqlite3 libsqlite3-dev
sudo apt-get install libxml2 libxml2-dev
sudo apt-get install libgtk2.0-0 libgtk2.0-dev
sudo apt-get install vtun lxc
sudo apt-get install uncrustify
sudo apt-get install doxygen graphviz imagemagick
sudo apt-get install texlive texlive-extra-utils texlive-latex-extra texlive-font-utils dvipng
sudo apt-get install python-sphinx dia
sudo apt-get install python-pygraphviz python-kiwi python-pygoocanvas libgoocanvas-dev
sudo apt-get install libboost-signals-dev libboost-filesystem-dev
sudo apt-get install openmpi-bin openmpi-common openmpi-doc libopenmpi-dev

# Step 2:
mkdir NS3repo
cd NS3repo
hg clone http://code.nsnam.org/ns-3-allinone

# Step 3: You will find ns-3-allinone directory move to this directory and run the python file to download.
cd ns-3-allinone
./download.py

# Step 4: This is time to compile and build the package. run build python file
./build.py

# Step 5: Configure it using waf. So change the directory to ns-3-dev

cd ns-3-dev
CXXFLAGS="-O3" ./waf configure
./waf -d optimized configure; ./waf
./waf --enable-examples configure
./waf --enable-tests configure

# Step 6: Now check your installation by running python test file

./test.py



